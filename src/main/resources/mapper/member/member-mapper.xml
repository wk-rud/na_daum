<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="member">
	
	<select id="selectOneMember" resultType="member">
		select * from member where id = #{id}
	</select>
	
	<select id="selectOneMemberNickname" resultType="member">
		select * from member where nickname = #{nickname}
	</select>
	
	<select id="selectAllAnnouncement" resultMap="announcementMap">
		select * from announcement order by reg_date desc
	</select>
	
	<select id="countAllAnnouncementList" resultType="_int">
		select count(*) from announcement
	</select>
	
	<select id="selectAllNotInMe" resultType="member">
		select * from member where id not in #{id} and search = 'T'
	</select>
	
	<select id="selectAllFriend" resultMap="friendMap">
		select * from friend where my_nickname = #{nickname}
	</select>
	
	<select id="selectAllRequestFriend" resultMap="requestFriendMap">
		select * from request_friend where my_nickname = #{nickname} and is_friend = 'F'
	</select>
	
	<select id="selectAllRequestFriendByMe" resultMap="requestFriendMap">
		select * from request_friend where follower_nickname = #{nickname} and is_friend = 'F'
	</select>
	
	<update id="updateMemberProfile">
		update member set profile = #{profile} where id = #{id}
	</update>
	
	<!-- 친구 crud 시작 -->	
	
	<select id="selectSearchMemberNickname" resultType="string">
		select nickname from member where nickname like '%'||#{value}||'%'
	</select>
	
	<select id="selectOneMemberNicknameNotMe" resultType="member">
		select * from member where nickname = #{friendNickname} and not id = #{id}
	</select>
	
	<select id="selectFollower" resultMap="requestFriendMap">
		select * from request_friend where is_friend = 'F' and my_nickname = #{myNickname} and follower_nickname = #{friendNickname}
	</select>
	
	<select id="selectFollowing" resultMap="requestFriendMap">
		select * from request_friend where is_friend = 'F' and my_nickname = #{friendNickname} and follower_nickname = #{myNickname}
	</select>
	
	<select id="selectFriend" resultMap="friendMap">
		select * from friend where my_nickname = #{myNickname} and friend_nickname = #{friendNickname}
	</select>
	
	<update id="updateRequestFriend">
		update request_friend set is_friend = 'T' where my_nickname = #{myNickname} and follower_nickname = #{friendNickname}
	</update>
	
	<insert id="insertFriend">
		insert into friend values(concat('fr-',seq_friend_no.nextval), #{myNickname}, #{friendNickname})
	</insert>
	
	<insert id="insertAlarm">
		insert into alarm (no, id, content)
		values(seq_alarm_no.nextval, #{id}, #{content})
	</insert>
	
	<delete id="deleteRequestFriend">
		delete from request_friend where my_nickname = #{myNickname} and follower_nickname = #{friendNickname}
	</delete>
	
	<delete id="deleteFriend">
		delete from friend where my_nickname = #{myNickname} and friend_nickname = #{friendNickname}
	</delete>
	
	<insert id="insertRequestFriend">
		insert into request_friend (code, my_nickname, follower_nickname)
		values(concat('rf-', seq_request_friend_no.nextval), #{friendNickname}, #{myNickname})
	</insert>
	
	<!-- 친구 crud 끝 -->
	
	<!-- help 시작 -->
	
	<select id="selectAllMyQuestions" resultMap="helpMap">
		select * from help where id = #{id}
	</select>
	
	<select id="selectAllMembersQuestions" resultMap="helpMap">
		select * from help order by status desc
	</select>
	
	<select id="selectAllHelpTitle" resultType="string">
		select title from help where title like '%'||#{value}||'%'
	</select>
	
	<select id="selectHelpByInput" resultType="map">
		select code code, id id, category category, title title, reg_date regDate, status status from help where title like '%'||#{value}||'%'
	</select>
	
	<select id="selectOneSelectedHelp" resultMap="helpMap">
		select * from help where code = #{code}
	</select>
	
	<!-- help 끝 -->
		
	<insert id="insertMember">
		insert into member(id, password, name, email, address, nickname, auth_key)
		values(#{id}, #{password}, #{name}, #{email}, #{address}, #{nickname}, #{authKey})
	</insert>
	
	<insert id="insertKakaoMember">
		insert into member(id, password, name, nickname, enabled, profile, login_type)
		values(#{id}, #{password}, #{name}, #{nickname}, 1, #{profile_image}, #{loginType})
	</insert>
	
	<update id="confirmMember">
		update member set enabled = 1 where email = #{email} and auth_key = #{authKey}
	</update>
	
	<insert id="insertRole">
		insert into authority values(#{id}, 'ROLE_USER')
	</insert>
	
	<update id="updateMember">
		update member set nickname = #{nickname} where id = #{id}
	</update>
	
	<select id="selectAllAlarm" resultMap="alarm">
		select
			*
		from
			alarm a
				left join schedule s
					on a.code = s.code
		where
			a.id = #{id}
		order by
			a.reg_date desc
	</select>
	
	<resultMap type="map" id="alarm">
		<id column="no" property="no"/>
		<result column="code" property="code"/>
		<result column="status" property="status"/>
		<result column="content" property="content"/>
		<result column="id" property="id"/>
		<result column="reg_date" property="regDate"/>
		<result column="no" property="no"/>
		<result column="friend_id" property="friendId"/>
		<result column="accept" property="accpet"/>
		<result column="code" property="code"/>
		<result column="c_code" property="cCode"/>
		<result column="all_day" property="allDay"/>
		<result column="id" property="id"/>
	</resultMap>
			
	<resultMap type="map" id="helpMap">
		<id column="code" property="code"/>
		<result column="id" property="id"/>
		<result column="category" property="category"/>
		<result column="title" property="title"/>
		<result column="content" property="content"/>
		<result column="reg_date" property="regDate"/>
		<result column="status" property="status"/>
		<result column="a_code" property="aCode"/>
		<result column="a_title" property="aTitle"/>
		<result column="a_content" property="aContent"/>
		<result column="a_reg_date" property="aRegDate"/>
	</resultMap>
	
	<resultMap type="map" id="announcementMap">
		<id column="code" property="code"/>
		<result column="title" property="title"/>
		<result column="content" property="content"/>
		<result column="read_count" property="readCount"/>
		<result column="reg_date" property="regDate"/>
		<result column="id" property="id"/>
	</resultMap>
	
	<resultMap type="map" id="friendMap">
		<id column="code" property="code"/>
		<result column="my_nickname" property="myNickname"/>
		<result column="friend_nickname" property="friendNickname"/>
	</resultMap>
	
	<resultMap type="map" id="requestFriendMap">
		<id column="code" property="code"/>
		<result column="my_nickname" property="myNickname"/>
		<result column="follower_nickname" property="followerNickname"/>
		<result column="is_friend" property="isFriend"/>
	</resultMap>
	
	
</mapper>

